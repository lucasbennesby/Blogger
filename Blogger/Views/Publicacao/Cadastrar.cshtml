@using Blogger.Models.ViewModels
@model CadastrarPublicacaoViewModel

<script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
<link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet" />

<form id="form" asp-action="Cadastrar" method="post" enctype="multipart/form-data">
    <div class="text-center mb-3">
        <label for="arquivoDeImagem" >
            <img id="imagem" hidden style="width:300px; height:170px;" />
        </label>
    </div>
    <div>
        <input required id="arquivoDeImagem" class="form-control mb-1" type="file" name="imagem" />
    </div>
    <div class="input-group mb-1">
        <span class="input-group-text" id="inputGroup-sizing-sm">Título</span>
        <input asp-for="Titulo" id="titulo" class="form-control" type="text" required />
    </div>
    <div class="input-group mb-3">
        <span class="input-group-text" id="inputGroup-sizing-sm">Subtítulo</span>
        <input asp-for="SubtTitulo" id="subTitulo" class="form-control" type="text" required />
    </div>
    <h3 class="text-center">
        Escreva seu texto abaixo:
    </h3>
   <div>
       <input type="hidden" id="Conteudo" asp-for="Conteudo" />
       <div id="editor"></div>
   </div>

    <button class="btn btn-success mt-2 mb-5" id="submit" type="submit">Publicar

    </button>
</form>

<script>
    const options = {
        debug: 'info',
        modules: {
            toolbar: true,
        },
        placeholder: 'Escreva seu conteúdo...',
        theme: 'snow'
    };
    const quill = new Quill('#editor', options); 
    const submit = document.querySelector("#submit");
    submit.addEventListener("click",()=>{
        console.log("submitando");
        document.querySelector("#Conteudo").value = quill.root.innerHTML;
    })   
</script>


@* faz com que a imagem apareça em miniatura *@
<script>
    const entradaDeArquivo = document.querySelector("#arquivoDeImagem");
    entradaDeArquivo.addEventListener("change", function (e) {
        const alvoDeEntrada = e.target;
        const arquivo = alvoDeEntrada.files[0];

        if (arquivo) {
            const leitor = new FileReader();

            leitor.addEventListener("load", function (e) {
                const alvoDoLeitor = e.target;
                const imagem = new Image();

                imagem.onload = function () {
                    const canvas = document.createElement("canvas");
                    const ctx = canvas.getContext("2d");

                    // Defina as dimensões desejadas
                    const largura = 238; // Largura desejada
                    const altura = 132.91; // Altura desejada
                    canvas.width = largura;
                    canvas.height = altura;

                    // Redimensiona a imagem no canvas
                    ctx.drawImage(imagem, 0, 0, largura, altura);

                    // Obtém a imagem redimensionada
                    const imagemRedimensionada = canvas.toDataURL("image/jpeg");

                    // Define a imagem redimensionada no elemento <img>
                    const imgElement = document.querySelector("#imagem");
                    imgElement.removeAttribute("hidden");
                    imgElement.src = imagemRedimensionada;
                };

                imagem.src = alvoDoLeitor.result;
            });

            leitor.readAsDataURL(arquivo);
        }
    });
</script>


